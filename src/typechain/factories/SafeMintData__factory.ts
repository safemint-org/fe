/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SafeMintData, SafeMintDataInterface } from "../SafeMintData";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum ISafeMint.Status",
        name: "status",
        type: "uint8",
      },
    ],
    name: "ArbitrateProject",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "auditor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "auditPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "comments",
        type: "string",
      },
      {
        indexed: false,
        internalType: "enum ISafeMint.Status",
        name: "status",
        type: "uint8",
      },
    ],
    name: "AuditProject",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "challenger",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "challengePrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "comments",
        type: "string",
      },
    ],
    name: "ChallengeProject",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ipfsAddress",
        type: "string",
      },
    ],
    name: "EditProject",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "projectContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "projectPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ipfsAddress",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
    ],
    name: "SaveProject",
    type: "event",
  },
  {
    inputs: [],
    name: "ARBITRATOR_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "AUDITOR_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auditPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "auditRecord",
    outputs: [
      {
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "auditor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "auditTime",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "comments",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "auditFee",
        type: "uint256",
      },
      {
        internalType: "enum ISafeMint.Status",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "challengeArr",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "challengePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "challengeRecord",
    outputs: [
      {
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "challenger",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "comments",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "challengeFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "contractAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "feeRecord",
    outputs: [
      {
        internalType: "uint256",
        name: "auditTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "auditor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lockedArr",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "passedArr",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pendingArr",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "projectArr",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "createTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "projectContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "ipfsAddress",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "projectFee",
        type: "uint256",
      },
      {
        internalType: "enum ISafeMint.Status",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "projectId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projectPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rejectArr",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "user",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610945806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638e972034116100a2578063cd272f1b11610071578063cd272f1b146102d7578063e5506036146102ea578063f1098a31146102fd578063f6896b3f14610306578063fde4887b1461032e57600080fd5b80638e9720341461027a5780639cea0787146102835780639de7d7ba146102aa578063a4e465aa146102b357600080fd5b806361f0558e116100e957806361f0558e146101e557806365a991861461020a5780636e1d616e1461021d57806381e7e20e146102445780638b9e260a1461026757600080fd5b806309a33d4b1461011b5780630fb5a6b4146101535780632ed9e8121461016a5780635ed91333146101c5575b600080fd5b61013e6101293660046106f5565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61015c600f5481565b60405190815260200161014a565b6101a2610178366004610725565b60056020526000908152604090208054600182015460029092015490916001600160a01b03169083565b604080519384526001600160a01b0390921660208401529082015260600161014a565b61015c6101d3366004610725565b60026020526000908152604090205481565b6101f86101f336600461073e565b610341565b60405161014a969594939291906107cf565b61015c610218366004610725565b61042d565b61015c7f59a1c48e5837ad7a7f3dcedcbe129bf3249ec4fbf651fd4f5e2600ead39fe2f581565b61013e6102523660046106f5565b60006020819052908152604090205460ff1681565b61015c610275366004610725565b61044e565b61015c600c5481565b61015c7f16ceee8289685dd2a02b9c8ae81d2df373176ce53519e6284e2a2950d6546ffa81565b61015c600d5481565b6102c66102c136600461073e565b61045e565b60405161014a95949392919061081c565b61015c6102e5366004610725565b610540565b61015c6102f8366004610725565b610550565b61015c600e5481565b610319610314366004610725565b610560565b60405161014a9998979695949392919061085b565b61015c61033c366004610725565b6106e5565b6003602052816000526040600020818154811061035d57600080fd5b600091825260209091206006909102018054600182015460028301546003840180549396506001600160a01b039092169450929161039a906108d4565b80601f01602080910402602001604051908101604052809291908181526020018280546103c6906108d4565b80156104135780601f106103e857610100808354040283529160200191610413565b820191906000526020600020905b8154815290600101906020018083116103f657829003601f168201915b50505050600483015460059093015491929160ff16905086565b6009818154811061043d57600080fd5b600091825260209091200154905081565b6008818154811061043d57600080fd5b6004602052816000526040600020818154811061047a57600080fd5b600091825260209091206005909102018054600182015460028301546003840180549396506001600160a01b03909216945092916104b7906108d4565b80601f01602080910402602001604051908101604052809291908181526020018280546104e3906108d4565b80156105305780601f1061050557610100808354040283529160200191610530565b820191906000526020600020905b81548152906001019060200180831161051357829003601f168201915b5050505050908060040154905085565b6007818154811061043d57600080fd5b600a818154811061043d57600080fd5b600b818154811061057057600080fd5b9060005260206000209060090201600091509050806000018054610593906108d4565b80601f01602080910402602001604051908101604052809291908181526020018280546105bf906108d4565b801561060c5780601f106105e15761010080835404028352916020019161060c565b820191906000526020600020905b8154815290600101906020018083116105ef57829003601f168201915b5050506001840154600285015460038601546004870154600588015460068901805498996001600160a01b039687169995985093909516955090939092610652906108d4565b80601f016020809104026020016040519081016040528092919081815260200182805461067e906108d4565b80156106cb5780601f106106a0576101008083540402835291602001916106cb565b820191906000526020600020905b8154815290600101906020018083116106ae57829003601f168201915b50505050600783015460089093015491929160ff16905089565b6006818154811061043d57600080fd5b60006020828403121561070757600080fd5b81356001600160a01b038116811461071e57600080fd5b9392505050565b60006020828403121561073757600080fd5b5035919050565b6000806040838503121561075157600080fd5b50508035926020909101359150565b6000815180845260005b818110156107865760208185018101518683018201520161076a565b81811115610798576000602083870101525b50601f01601f19169290920160200192915050565b600581106107cb57634e487b7160e01b600052602160045260246000fd5b9052565b86815260018060a01b038616602082015284604082015260c0606082015260006107fc60c0830186610760565b905083608083015261081160a08301846107ad565b979650505050505050565b85815260018060a01b038516602082015283604082015260a06060820152600061084960a0830185610760565b90508260808301529695505050505050565b600061012080835261086f8184018d610760565b6001600160a01b038c81166020860152604085018c90528a1660608501526080840189905260a0840188905283810360c085015290506108af8187610760565b9150508360e08301526108c66101008301846107ad565b9a9950505050505050505050565b600181811c908216806108e857607f821691505b6020821081141561090957634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220d35b39978a05c12774bdfd7f9d7467782b1aa093c3ab6305ca5eee812c709fcc64736f6c634300080b0033";

export class SafeMintData__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SafeMintData> {
    return super.deploy(overrides || {}) as Promise<SafeMintData>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SafeMintData {
    return super.attach(address) as SafeMintData;
  }
  connect(signer: Signer): SafeMintData__factory {
    return super.connect(signer) as SafeMintData__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeMintDataInterface {
    return new utils.Interface(_abi) as SafeMintDataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeMintData {
    return new Contract(address, _abi, signerOrProvider) as SafeMintData;
  }
}
