/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { ISafeMint, ISafeMintInterface } from "../ISafeMint";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "projectFee",
        type: "uint256",
      },
    ],
    name: "AuditorClaimFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ipfsAddress",
        type: "string",
      },
    ],
    name: "EditProject",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "enum ISafeMint.Status",
        name: "status",
        type: "uint8",
      },
    ],
    name: "ProjectStatus",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "projectContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ipfsAddress",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "projectPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
    ],
    name: "SaveProject",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "auditorClaimFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "getProject",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "createTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "projectContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "ipfsAddress",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "projectFee",
            type: "uint256",
          },
          {
            internalType: "enum ISafeMint.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct ISafeMint.Project",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
    ],
    name: "getProjectById",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "createTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "projectContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "ipfsAddress",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "projectFee",
            type: "uint256",
          },
          {
            internalType: "enum ISafeMint.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct ISafeMint.Project",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "projectId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "enum ISafeMint.Status",
        name: "status",
        type: "uint8",
      },
    ],
    name: "projectStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ISafeMint__factory {
  static readonly abi = _abi;
  static createInterface(): ISafeMintInterface {
    return new utils.Interface(_abi) as ISafeMintInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISafeMint {
    return new Contract(address, _abi, signerOrProvider) as ISafeMint;
  }
}
