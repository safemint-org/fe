/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SafeMintAuditData,
  SafeMintAuditDataInterface,
} from "../SafeMintAuditData";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum ISafeMint.Status",
        name: "status",
        type: "uint8",
      },
    ],
    name: "ArbitrateProject",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "auditor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "auditPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "comments",
        type: "string",
      },
      {
        indexed: false,
        internalType: "enum ISafeMint.Status",
        name: "status",
        type: "uint8",
      },
    ],
    name: "AuditProject",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "challenger",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "challengePrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "comments",
        type: "string",
      },
    ],
    name: "ChallengeProject",
    type: "event",
  },
  {
    inputs: [],
    name: "ARBITRATOR_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "AUDITOR_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auditPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "auditRecord",
    outputs: [
      {
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "auditor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "auditTime",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "comments",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "auditFee",
        type: "uint256",
      },
      {
        internalType: "enum ISafeMint.Status",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "challengePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "challengeRecord",
    outputs: [
      {
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "challenger",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "comments",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "challengeFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "feeRecord",
    outputs: [
      {
        internalType: "uint256",
        name: "auditTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "auditor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "safeMint",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052601360075534801561001557600080fd5b5061056d806100256000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80639cea0787116100665780639cea0787146101935780639de7d7ba146101ba578063a4e465aa146101c3578063f1098a31146101e7578063fc0c546a146101f057600080fd5b80630fb5a6b4146100a35780632ed9e812146100bf57806361f0558e1461011c5780636871ee40146101415780636e1d616e1461016c575b600080fd5b6100ac60075481565b6040519081526020015b60405180910390f35b6100f96100cd3660046103d1565b60026020819052600091825260409091208054600182015491909201546001600160a01b039091169083565b604080519384526001600160a01b039092166020840152908201526060016100b6565b61012f61012a3660046103ea565b610203565b6040516100b696959493929190610459565b600454610154906001600160a01b031681565b6040516001600160a01b0390911681526020016100b6565b6100ac7f59a1c48e5837ad7a7f3dcedcbe129bf3249ec4fbf651fd4f5e2600ead39fe2f581565b6100ac7f16ceee8289685dd2a02b9c8ae81d2df373176ce53519e6284e2a2950d6546ffa81565b6100ac60055481565b6101d66101d13660046103ea565b6102ef565b6040516100b69594939291906104bd565b6100ac60065481565b600354610154906001600160a01b031681565b6000602052816000526040600020818154811061021f57600080fd5b600091825260209091206006909102018054600182015460028301546003840180549396506001600160a01b039092169450929161025c906104fc565b80601f0160208091040260200160405190810160405280929190818152602001828054610288906104fc565b80156102d55780601f106102aa576101008083540402835291602001916102d5565b820191906000526020600020905b8154815290600101906020018083116102b857829003601f168201915b50505050600483015460059093015491929160ff16905086565b6001602052816000526040600020818154811061030b57600080fd5b600091825260209091206005909102018054600182015460028301546003840180549396506001600160a01b0390921694509291610348906104fc565b80601f0160208091040260200160405190810160405280929190818152602001828054610374906104fc565b80156103c15780601f10610396576101008083540402835291602001916103c1565b820191906000526020600020905b8154815290600101906020018083116103a457829003601f168201915b5050505050908060040154905085565b6000602082840312156103e357600080fd5b5035919050565b600080604083850312156103fd57600080fd5b50508035926020909101359150565b6000815180845260005b8181101561043257602081850181015186830182015201610416565b81811115610444576000602083870101525b50601f01601f19169290920160200192915050565b86815260018060a01b038616602082015284604082015260c06060820152600061048660c083018661040c565b9050836080830152600583106104ac57634e487b7160e01b600052602160045260246000fd5b8260a0830152979650505050505050565b85815260018060a01b038516602082015283604082015260a0606082015260006104ea60a083018561040c565b90508260808301529695505050505050565b600181811c9082168061051057607f821691505b6020821081141561053157634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220ba0753a93222e7f0329771854266694097e8d4707ac6057d831d311fd74e0ab664736f6c634300080b0033";

export class SafeMintAuditData__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SafeMintAuditData> {
    return super.deploy(overrides || {}) as Promise<SafeMintAuditData>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SafeMintAuditData {
    return super.attach(address) as SafeMintAuditData;
  }
  connect(signer: Signer): SafeMintAuditData__factory {
    return super.connect(signer) as SafeMintAuditData__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeMintAuditDataInterface {
    return new utils.Interface(_abi) as SafeMintAuditDataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeMintAuditData {
    return new Contract(address, _abi, signerOrProvider) as SafeMintAuditData;
  }
}
